name: Setup GitHub Runner and Ansible
on:
    # workflow_run:
    #   workflows: ["Deploy Infrastructure"]
    #   types:
    #     - completed
   push:
    branches:
      - main
      - master     
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets. AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets. AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Debug AWS Secrets
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        
    - name: Pulumi login
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets. PULUMI_ACCESS_TOKEN }} 
      run: pulumi login
      
    - name: Pulumi stack select
      run: |
        cd infra
        Pulumi stack select arifhossaincse22/k3s_in_AWS_LAB-4/dev
    - name: Pulumi refresh
      run: |
        cd infra
        pulumi refresh --yes

    - name: Save Pulumi outputs 
      id: pulumi_outputs
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      run: |
        cd infra
        GIT_RUNNER_IP=$(pulumi stack output git_runner_public_ip)
        echo "GIT_RUNNER_IP=$GIT_RUNNER_IP" >> $GITHUB_ENV
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY_LAPTOP }}

    # - name: SSH to Runner instance and install Ansible
    #   run: |
    #     ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} <<< 'EOF' sudo apt-get update -y
    #     sudo apt install software-properties-common -y
    #     sudo apt-add-repository --yes --update ppa:ansible/ansible
    #     sudo apt-get install -y ansible
    #     ansible --version
    #     EOF


    - name: SSH to Runner EC2 and install GitHub Runner
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} << 'EOF'
        mkdir actions-runner && cd actions-runner
        curl -o actions-runner-linux-x64-2.317.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz
        echo "9e883d210df8c6028aff475475a457d380353f9d01877d51cc01a17b2a91161d  actions-runner-linux-x64-2.317.0.tar.gz" | shasum -a 256 -c
        tar xzf ./actions-runner-linux-x64-2.317.0.tar.gz

        ./config.sh --url https://github.com/Arif911659/k3s_in_AWS_LAB-4 --token BBLWSX5LWNUUYBG737SWRBLG3GQPC --name "Git-Runner"

        sudo ./svc.sh install
        sudo ./svc.sh start
        EOF
